---
title: "EDS 221 day 8 comp"
format: html
editor: visual
---

## Review Basics of ggplot

```{r}
library(tidyverse)
library(here)
library(janitor)

library(patchwork)
library(ggrepel)
library(gghighlight)
library(paletteer)
library(gapminder)
library(sf)
```

## Read in Data

```{r}
lizards <- read_csv(here("data_tidy", "lizards.csv"))
```

Do some data wrangling to create a new subset from lizards where you:

1.  Limit the data to only contain western whiptails, colorado checkered, and eastern fence lizards
2.  Add a new column with total length converted to cm
3.  Group by species and site
4.  Return a summary table with mean total length and standard deviation of total length by species and site

```{r}
length_table <- lizards %>% 
  filter(common_name == "western whiptail" | common_name == "colorado checkered" | common_name == "eastern fence") %>% 
  mutate(total_length_cm = total_length/10) %>% 
  group_by(common_name, site) %>% 
  summarize(mean_length_cm = mean(total_length_cm, na.rm = TRUE),
            sd_length_cm = sd(total_length_cm, na.rm = TRUE))
```

```{r}
ggplot(data = lizards, aes(x = total_length, y = weight)) +
  geom_point(aes(color = common_name)) +
  facet_wrap(~ common_name, scales = "free")
```

```{r}
lizard_counts <- lizards %>% 
  count(common_name)
#Use dplyer::count to find the total number of lizards by common name in the lizards dataset
```

```{r}
ggplot(data = lizard_counts,  aes(y = fct_reorder(common_name, n), x = n)) +
  geom_col()

#fct_reorder makes a meaningful order to groups
```

```{r}
ggplot(data = lizards, aes(x = total_length, y = weight, color = weight)) +
  geom_point() +
  scale_y_continuous(limits = c(0, 100),
                     #breaks = c(20, 80)
                     breaks = seq(from = 0, to = 100, by = 20),
                     expand = c(0, 0)) +
  scale_color_gradientn(colors = c("yellow", "orange", "purple"))
```

# Comp 2

```{r}
ggplot(data = gapminder, aes(x = lifeExp, y = gdpPercap)) +
  geom_point() + 
  annotate("text", x = 40, y = 90000, label = "A LABEL!") +
  geom_hline(yintercept = 70000, linetype = "dotted", color = "purple") +
  geom_vline(xintercept = mean(gapminder$lifeExp))
```

```{r}
gapminder %>% 
  filter(year == "2002", continent == "Europe") %>% 
  ggplot(aes(x = gdpPercap, y = lifeExp)) +
  geom_point(shape = 23, size = 4, color = "purple", fill = "orange") +
  geom_text_repel(aes(label = country))
```

```{r}
gapminder %>% 
  filter(year == "2002", continent == "Europe") %>% 
  ggplot(aes(x = gdpPercap, y = lifeExp)) +
  geom_point() +
  geom_text_repel(aes(label = country)) +
  gghighlight(country == "Poland", label_key = country)
```

create a ggplot chart using data only from 2007, then highlight all countries in Europe, addin their country name as the label

```{r}
gapminder %>% 
  filter(year == "2007") %>% 
  ggplot(aes(x = gdpPercap, y = lifeExp)) +
  geom_point(size = 5, color = "maroon", fill = "darkgreen") +
  geom_text_repel(aes(label = country)) +
  gghighlight(continent == "Europe", label_key = country)
```

## Breaking

```{r}
jornada_veg <- read_sf(here("data_raw", "spatial_vegetation", "doc.kml")) %>% 
  select(name = Name) #can be used to rename stuff

ggplot() +
  geom_sf(data = jornada_veg, aes(fill = name), color = NA) +
  theme_minimal() +
  scale_fill_paletteer_d(palette = "palettetown::vaporeon") +
  theme(panel.background = element_rect(color = "darkgray", size = 5, fill = "darkgreen"),
        plot.background = element_rect(fill = "skyblue"),
        panel.grid.major = element_line(color = "black"),
        axis.text.x = element_text(color = "red"))
```
